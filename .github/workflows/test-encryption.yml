# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test Encryption

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: '3.x'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pycryptodome
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test new message encryption
      run: |
        message=$"Hello World\nTest with new message encryption"
        python main.py <<EOF
        1
        2
        $message
        __exit__
        secret key
        EOF

        output=$(python main.py <<EOF
        2
        message.enc
        secret key
        EOF
        )

        dec_message=$(echo "$output" | tail -n +8)
        if [ "$dec_message" == "$message" ]; then
          echo "Successful"
          exit 0
        else
          echo "Failed"
          exit 1
        fi
    - name: Test existing message encryption
      run: |
        message=$"Hello World\nTest with existing message encryption"
        echo $message > test_message.txt
        python main.py <<EOF
        1
        1
        test_message.txt
        secret key
        EOF

        output=$(python main.py <<EOF
        2
        test+message.enc
        secret key
        EOF
        )

        dec_message=$(echo "$output" | tail -n +8)
        if [ "$dec_message" == "$message" ]; then
          echo "Successful"
          exit 0
        else
          echo "Failed"
          exit 1
        fi

        
        
        
